{"remainingRequest":"/Users/simtaxx/Desktop/QuickZic/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/simtaxx/Desktop/QuickZic/src/views/inGame.vue?vue&type=style&index=0&id=2866b5d1&lang=scss&scoped=true&","dependencies":[{"path":"/Users/simtaxx/Desktop/QuickZic/src/views/inGame.vue","mtime":1574151940839},{"path":"/Users/simtaxx/Desktop/QuickZic/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/simtaxx/Desktop/QuickZic/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/simtaxx/Desktop/QuickZic/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/simtaxx/Desktop/QuickZic/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/simtaxx/Desktop/QuickZic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/simtaxx/Desktop/QuickZic/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.informations {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  input {\n    margin-bottom: 200px;\n  }\n}\nbutton {\n  margin-bottom: 200px;\n}\n",{"version":3,"sources":["inGame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"inGame.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div v-if=\"musicData.cover\" class=\"container\">\n    <div class=\"columns\">\n      <div class=\"column is-two-fifths\">\n        <figure>\n          <h2 class=\"is-size-2\">{{ musicData.artist.name }}</h2>\n          <img :src=\"musicData.cover_big\" alt=\"\">\n        </figure>\n      </div>\n      <div class=\"informations column is-two-fifths\">\n        <div class=\"has-text-centered\">\n          <h2 class=\"is-size-2\">Temps Restant</h2>\n          <h2 class=\"is-size-2\">{{ time }}</h2>\n        </div>\n        <input v-if=\"time > 0\" class=\"input\" v-model=\"userResponse\" @keyup.enter=\"checkAnwser(userResponse)\" type=\"text\" autofocus>\n        <button v-if=\"time <= 0\" class=\"button\" @click=\"reset\">Rejouer</button>\n      </div>\n      <div class=\"informations column\">\n        <div class=\"has-text-centered\">\n          <h2 class=\"is-size-2\">Score</h2>\n          <h2 class=\"is-size-2\">{{ userScore }}</h2>\n        </div>\n        <audio autoplay :src=\"currentSong\" ref=\"mediaAudio\"></audio>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosCall } from \"../mixins/axiosCall\";\n\nexport default {\n  name: \"inGame\",\n  data() {\n    return {\n      musicData: {},\n      indexMusic: 0,\n      userScore: 0,\n      time: 60,\n      userResponse: \"\",\n    };\n  },\n  mixins: [axiosCall],\n  async mounted() {\n    await this.axiosGet();\n    this.musicData = this.axiosResponse.data\n    if(this.time !== 0) {\n      this.setTimer()\n    }\n  },\n  methods: {\n    nextMusic() {\n      return this.indexMusic ++\n    },\n    checkAnwser(e) {\n      if (e === this.musicData.songs[this.indexMusic].title.toLowerCase()) {\n        this.userScore ++\n        this.userResponse = \"\"\n        this.nextMusic()\n      } else {\n        this.userResponse = \"\"\n        this.nextMusic()\n      }\n    },\n    setTimer() {\n      this.time --\n      if(this.time === 0){\n        this.gameOver()\n      } else {\n        setTimeout(this.setTimer, 1000);\n      }\n    },\n    gameOver() {\n      this.$refs.mediaAudio.pause()\n    },\n    reset() {\n      this.userScore = 0\n      this.time = 4\n      this.setTimer()\n    }\n  },\n  computed: {\n    currentSong() {\n      if(this.time <= 0) {\n        stop()\n      } else {\n        this.musicData.preview = this.musicData.tracks.data[this.indexMusic].preview\n        return this.musicData.preview\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.informations {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  input {\n    margin-bottom: 200px;\n  }\n}\nbutton {\n  margin-bottom: 200px;\n}\n</style>"]}]}